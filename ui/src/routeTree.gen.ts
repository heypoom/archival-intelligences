/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const TwoBLazyImport = createFileRoute('/two-b')()
const TwoLazyImport = createFileRoute('/two')()
const ThreeBLazyImport = createFileRoute('/three-b')()
const ThreeLazyImport = createFileRoute('/three')()
const OneLazyImport = createFileRoute('/one')()
const FourBLazyImport = createFileRoute('/four-b')()
const FourLazyImport = createFileRoute('/four')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TwoBLazyRoute = TwoBLazyImport.update({
  path: '/two-b',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/two-b.lazy').then((d) => d.Route))

const TwoLazyRoute = TwoLazyImport.update({
  path: '/two',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/two.lazy').then((d) => d.Route))

const ThreeBLazyRoute = ThreeBLazyImport.update({
  path: '/three-b',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/three-b.lazy').then((d) => d.Route))

const ThreeLazyRoute = ThreeLazyImport.update({
  path: '/three',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/three.lazy').then((d) => d.Route))

const OneLazyRoute = OneLazyImport.update({
  path: '/one',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/one.lazy').then((d) => d.Route))

const FourBLazyRoute = FourBLazyImport.update({
  path: '/four-b',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/four-b.lazy').then((d) => d.Route))

const FourLazyRoute = FourLazyImport.update({
  path: '/four',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/four.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/four': {
      id: '/four'
      path: '/four'
      fullPath: '/four'
      preLoaderRoute: typeof FourLazyImport
      parentRoute: typeof rootRoute
    }
    '/four-b': {
      id: '/four-b'
      path: '/four-b'
      fullPath: '/four-b'
      preLoaderRoute: typeof FourBLazyImport
      parentRoute: typeof rootRoute
    }
    '/one': {
      id: '/one'
      path: '/one'
      fullPath: '/one'
      preLoaderRoute: typeof OneLazyImport
      parentRoute: typeof rootRoute
    }
    '/three': {
      id: '/three'
      path: '/three'
      fullPath: '/three'
      preLoaderRoute: typeof ThreeLazyImport
      parentRoute: typeof rootRoute
    }
    '/three-b': {
      id: '/three-b'
      path: '/three-b'
      fullPath: '/three-b'
      preLoaderRoute: typeof ThreeBLazyImport
      parentRoute: typeof rootRoute
    }
    '/two': {
      id: '/two'
      path: '/two'
      fullPath: '/two'
      preLoaderRoute: typeof TwoLazyImport
      parentRoute: typeof rootRoute
    }
    '/two-b': {
      id: '/two-b'
      path: '/two-b'
      fullPath: '/two-b'
      preLoaderRoute: typeof TwoBLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  FourLazyRoute,
  FourBLazyRoute,
  OneLazyRoute,
  ThreeLazyRoute,
  ThreeBLazyRoute,
  TwoLazyRoute,
  TwoBLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/four",
        "/four-b",
        "/one",
        "/three",
        "/three-b",
        "/two",
        "/two-b"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/four": {
      "filePath": "four.lazy.tsx"
    },
    "/four-b": {
      "filePath": "four-b.lazy.tsx"
    },
    "/one": {
      "filePath": "one.lazy.tsx"
    },
    "/three": {
      "filePath": "three.lazy.tsx"
    },
    "/three-b": {
      "filePath": "three-b.lazy.tsx"
    },
    "/two": {
      "filePath": "two.lazy.tsx"
    },
    "/two-b": {
      "filePath": "two-b.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
